/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package wallet;

option java_multiple_files = true;
option java_package = "bisq.wallet.protobuf";

// The WalletService definition.
service Wallet {
    rpc IsWalletReady (IsWalletReadyRequest) returns (IsWalletReadyResponse);
    rpc GetUnusedAddress (GetUnusedAddressRequest) returns (GetUnusedAddressResponse);
    rpc GetWalletAddresses (GetWalletAddressesRequest) returns (GetWalletAddressesResponse);
    rpc ListTransactions (ListTransactionsRequest) returns (ListTransactionsResponse);
    rpc ListUtxos (ListUtxosRequest) returns (ListUtxosResponse);
    rpc SendToAddress (SendToAddressRequest) returns (SendToAddressResponse);
    rpc IsWalletEncrypted (IsWalletEncryptedRequest) returns (IsWalletEncryptedResponse);
    rpc GetBalance (GetBalanceRequest) returns (GetBalanceResponse);
    rpc GetSeedWords (GetSeedWordsRequest) returns (GetSeedWordsResponse);
    rpc EncryptWallet (EncryptWalletRequest) returns (EncryptWalletResponse);
    rpc DecryptWallet (DecryptWalletRequest) returns (DecryptWalletResponse);
}



message IsWalletReadyRequest {}

message IsWalletReadyResponse {
    bool ready = 1;
}

message GetUnusedAddressRequest {}

message GetUnusedAddressResponse {
    string address = 1;
}

message GetWalletAddressesRequest {}

message GetWalletAddressesResponse {
    repeated string addresses = 1;
}

message ListTransactionsRequest {}

message ListTransactionsResponse {
    repeated Transaction transactions = 1;
}

message ListUtxosRequest {}

message ListUtxosResponse {
    repeated Utxo utxos = 1;
}

message SendToAddressRequest {
    optional string passphrase = 1;
    string address = 2;
    uint64 amount = 3;
}

message SendToAddressResponse {
    string txId = 1;
}

message IsWalletEncryptedRequest {}

message IsWalletEncryptedResponse {
    bool encrypted = 1;
}

message GetBalanceRequest {}

message GetBalanceResponse {
    // Balance in satoshis
    uint64 balance = 1;
}

message GetSeedWordsRequest {}

message GetSeedWordsResponse {
    repeated string seedWords = 1;
}

message EncryptWalletRequest {
    string password = 1;
}

message EncryptWalletResponse {
    bool success = 1;
}

message DecryptWalletRequest {
    string password = 1;
}

message DecryptWalletResponse {
    bool success = 1;
}

message TransactionInput {
    string prevOutTxId = 1;
    int32 prevOutIndex = 2;
    int64 sequenceNumber = 3;
    bytes scriptSig = 4;
    string witness = 5;
}

message TransactionOutput {
    uint64 value = 1;
    string address = 2;
    bytes scriptPubKey = 3;
}

message Transaction {
    string txId = 1;
    repeated TransactionInput inputs = 2;
    repeated TransactionOutput outputs = 3;
    uint64 lockTime = 4;
    uint32 blockHeight = 5;
    uint64 date = 6; // Unix timestamp
    uint32 numConfirmations = 7;
    uint64 amount = 8;
    bool incoming = 9;
}

message Utxo {
    string txId = 1;
    uint32 vout = 2;
    uint64 amount = 3;
    string address = 4;
    uint32 numConfirmations = 5;
}