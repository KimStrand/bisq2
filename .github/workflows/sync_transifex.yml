name: Transifex

on:
  pull_request:
  workflow_run:
    workflows: [ Build Bisq 2 ]
    types: [ completed ]

jobs:
  verify:
    name: Verify Transifex configuration
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Verify that .tx/config is in sync with the i18n folder
        run: |
          set -euo pipefail

          # Extract source files from .tx/config, trimming whitespace and de-duplicating
          config_files=$(grep 'source_file' .tx/config \
            | sed 's/.*= *//' \
            | sed 's|i18n/src/main/resources/||' \
            | sort -u)
          
          # Get actual source files from i18n directory (excluding locale-specific files)
          i18n_files=$(find i18n/src/main/resources -maxdepth 1 -name "*.properties" \
            | grep -v -E '(_[a-z]{2}|_[a-z]{2}_[A-Z]{2}|_[a-z]{2,3})\.properties$' \
            | sed 's|i18n/src/main/resources/||' \
            | sort -u)
          
          echo "Source files found in .tx/config:"
          echo "$config_files"
          echo "---------------------"
          echo "Source files found in i18n/src/main/resources/:"
          echo "$i18n_files"
          
          if [ "$config_files" != "$i18n_files" ]; then
            echo "::error::.tx/config is out of sync with i18n/src/main/resources/"
            echo "Please run the following command and commit the changes:"
            echo "./gradlew apps:desktop:i18n:updateTxConfig"
            diff -u <(echo "$config_files") <(echo "$i18n_files")
            exit 1
          fi
          echo ".tx/config is in sync with i18n/src/main/resources/"

  push:
    name: Push translation source files to Transifex
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          # Fetch all history so we can check commits properly
          fetch-depth: 0

      - name: Check if the commit is in the main branch
        id: check_commit
        run: |
          git fetch origin main
          if git merge-base --is-ancestor ${{ github.event.workflow_run.head_sha }} origin/main; then
            echo "commit_in_main=true" >> $GITHUB_OUTPUT
          else
            echo "commit_in_main=false" >> $GITHUB_OUTPUT
          fi

      - name: "Check if TX_TOKEN secret exists"
        if: steps.check_commit.outputs.commit_in_main == 'true'
        env:
          transifex_secret: ${{ secrets.TX_TOKEN }}
        run: |
          if [ -z "$transifex_secret" ]; then
            echo "The secret \"TX_TOKEN\" has not been set; please go to \"settings > secrets and variables\" to create it"
            exit 1
          fi

      - name: Checkout at the specific commit
        if: steps.check_commit.outputs.commit_in_main == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Push source files using Transifex client
        if: steps.check_commit.outputs.commit_in_main == 'true'
        uses: transifex/cli-action@v2
        with:
          token: ${{ secrets.TX_TOKEN }}
          args: push -s
